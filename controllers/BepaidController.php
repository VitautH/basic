<?php

namespace app\controllers;

use app\components\Bepaid;
use app\models\Coupon;
use app\models\Order;
use Yii;
use app\models\User;
use yii\base\Controller;
use yii\db\Expression;
use app\controllers\Base\MainController as MainController;

/**
 * Class BepaidController
 * @package app\controllers
 */
class BepaidController extends MainController
{
    public $enableCsrfValidation = false;
    public $slug;
    public $slaidshow;

    public function init()
    {
        $this->slaidshow = null;
        parent::init(); // TODO: Change the autogenerated stub
    }


    /**
     * Renders the index view for the module
     * @return string
     */
    public function actionIndex()
    {
        return $this->redirect('/');
    }

    public function actionSuccess()
    {
        $token = Yii::$app->request->get('token', -1);
        $uid = Yii::$app->request->get('uid');
        $model = Order::findOne(['transaction_id' => $uid]);

        if (empty(Order::findOne(['token' => $token]))) {
            if (!empty($model)) {
                $coupon_id = $model->coupon_id;
                $coupon = Coupon::findOne(['id' => $coupon_id]);
                $session = Yii::$app->session;
                $session->setFlash('successful_paying', $coupon->coupon);

                return $this->redirect('/account/');
            } else {
                return $this->render('decline_payment', ['message' => _t('Внутрення ошибка! Доступ запрещён.')]);
            }
        }

        $data = ['token' => $token, 'status' => Yii::$app->request->get('status'), 'uid' => $uid];

        $check = $this->_check($data);

        if ($check['status'] === Bepaid::STATUS_SUCCESS && $data['status'] === Bepaid::STATUS_SUCCESS) {
            $session = Yii::$app->session;
            $session->setFlash('successful_paying', $check['coupon']);

            return $this->redirect('/account/');
        } else {
            return $this->redirect('/bepaid/cancel/');
        }
    }

    protected function _check($data)
    {
        $request= array();
        $provider = Yii::$app->get('bepaid');
        $checkData = $provider->getTransaction($data['uid']);
        $request = ['order_id'=>$checkData['tracking_id'], 'uid'=>$data['uid']];

        if (!empty($checkData) && $data['status'] == $checkData['status']) {
            if ($checkData['status'] == Bepaid::STATUS_SUCCESS) {
                $responsePaying = Order::payment($request);
                if ($responsePaying['status'] === Bepaid::STATUS_SUCCESS) {
                    return $responsePaying;
                }

            } else {
                Order::rollback($checkData);

                return false;
            }

        } else {
            return false;
        }
    }

    public function actionDecline()
    {
        $token = Yii::$app->request->get('token', -1);

        if (empty(Order::findOne(['token' => $token]))) {
            return $this->render('decline_payment', ['message' => _t('Внутрення ошибка! Доступ запрещён.')]);
        }

        $data = ['token' => $token, 'status' => Yii::$app->request->get('status'), 'uid' => Yii::$app->request->get('uid')];
        if (Order::failPayment($data)) {
            return $this->render('decline_payment', ['message' => _t('Транзакция откланена. Недостаточно средств.')]);
        } else {
            return $this->render('decline_payment', ['message' => _t('Внутрення ошибка! Доступ запрещён.')]);
        }

    }

    public function actionFail()
    {
        $token = Yii::$app->request->get('token', -1);

        if (empty(Order::findOne(['token' => $token]))) {
            return $this->render('decline_payment', ['message' => _t('Внутрення ошибка! Доступ запрещён.')]);
        }

        $data = ['token' => $token, 'status' => Yii::$app->request->get('status'), 'uid' => Yii::$app->request->get('uid')];
        if (Order::failPayment($data)) {
            return $this->render('decline_payment', ['message' => _t('Во время оплаты произошла ошибка.')]);
        } else {
            return $this->render('decline_payment', ['message' => _t('Внутрення ошибка! Доступ запрещён.')]);
        }
    }

    public function actionNotify()
    {
        $webhook = Yii::$app->get('bepaid');
        $webhook->notification();
    }

    public function actionCancel()
    {
        return $this->render('decline_payment', ['message' => _t('Транзакция откланена пользователем.')]);
    }
}
