<?php

namespace app\controllers;

use app\controllers\Base\MainController as MainController;
use app\models\User;
use app\models\Order;
use app\models\Products;
use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\ForbiddenHttpException;
use Yii;

class AccountController extends MainController
{
    private $user;
    private $order;
    private $user_id;
    public $slug;
    public function __construct($id, \yii\base\Module $module, array $config = [])
    {


       if (Yii::$app->user->isGuest) {

            throw new ForbiddenHttpException('Доступ запрещён');
        } else {
            $this->user_id = Yii::$app->user->identity->getId();
            $this->user = User::findOne(['id'=> $this->user_id]);
            // ToDo: проверить  на Order id
            $this->order = new Order();

        }



        parent::__construct($id, $module, $config);
    }
    // Turn off slaidshow
public function beforeAction($action)
{
    $this->slaidshow = null;
    return parent::beforeAction($action); // TODO: Change the autogenerated stub
}


    public function actionIndex()
    {

        return $this->render('index', ['model' => $this->order->findAll(['user_id' => $this->user_id])]);
    }
    public function actionProfile()
    {



        $model =User::findOne($this->user_id);
        return $this->render('profile', [
            'model' => $model,

        ]);
    }

    public function actionProfileUpdate()
    {
        $this->user->scenario =  User::SCENARIO_UPDATE;
        $request = Yii::$app->request;
        if (Yii::$app->request->isPost) {

            $this->user->load($request->post());


            if ($this->user->save()) {

                return $this->redirect(['/account/profile']);
            }
            else {

            }

        }
        else {

            throw new ForbiddenHttpException('Доступ запрещён');
        }
    }


    /**
     * Finds the Casino model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Casino the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = User::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
